[pytest]
# Pytest configuration for GameNight application

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --cov-branch
    --cov-fail-under=70

# Markers for organizing tests
markers =
    unit: Unit tests for isolated components
    integration: Integration tests for component interactions
    blackbox: Black-box testing (equivalence partitioning, BVA, etc.)
    whitebox: White-box testing (branch coverage, path coverage)
    security: Security-focused tests
    slow: Tests that take significant time to run
    auth: Authentication and authorization tests
    forms: Form validation tests
    models: Database model tests
    services: Service layer tests
    state_transition: State transition tests
    decision_table: Decision table tests for role-based permissions

# Coverage options
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__init__.py
    */config.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
